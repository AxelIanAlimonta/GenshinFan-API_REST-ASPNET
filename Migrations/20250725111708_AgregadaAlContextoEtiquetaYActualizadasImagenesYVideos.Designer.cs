// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GenshinFan_API_REST_ASPNET.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250725111708_AgregadaAlContextoEtiquetaYActualizadasImagenesYVideos")]
    partial class AgregadaAlContextoEtiquetaYActualizadasImagenesYVideos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EtiquetaImagen", b =>
                {
                    b.Property<int>("EtiquetasId")
                        .HasColumnType("int");

                    b.Property<int>("ImagenesId")
                        .HasColumnType("int");

                    b.HasKey("EtiquetasId", "ImagenesId");

                    b.HasIndex("ImagenesId");

                    b.ToTable("EtiquetaImagen");
                });

            modelBuilder.Entity("EtiquetaVideo", b =>
                {
                    b.Property<int>("EtiquetasId")
                        .HasColumnType("int");

                    b.Property<int>("VideosId")
                        .HasColumnType("int");

                    b.HasKey("EtiquetasId", "VideosId");

                    b.HasIndex("VideosId");

                    b.ToTable("EtiquetaVideo");
                });

            modelBuilder.Entity("GenshinFan_API_REST_ASPNET.Entities.Animacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("PersonajeId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoAnimacionId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PersonajeId");

                    b.HasIndex("TipoAnimacionId");

                    b.ToTable("Animaciones");
                });

            modelBuilder.Entity("GenshinFan_API_REST_ASPNET.Entities.Elemento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IconoURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Elementos");
                });

            modelBuilder.Entity("GenshinFan_API_REST_ASPNET.Entities.Etiqueta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Etiquetas");
                });

            modelBuilder.Entity("GenshinFan_API_REST_ASPNET.Entities.Imagen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Calificacion")
                        .HasColumnType("int");

                    b.Property<int?>("PersonajeId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PersonajeId");

                    b.ToTable("Imagenes");
                });

            modelBuilder.Entity("GenshinFan_API_REST_ASPNET.Entities.Personaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AvatarURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ElementoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaLanzamiento")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Rareza")
                        .HasColumnType("int");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("SplashArtURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TarjetaURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ElementoId");

                    b.HasIndex("RegionId");

                    b.ToTable("Personajes");
                });

            modelBuilder.Entity("GenshinFan_API_REST_ASPNET.Entities.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImagenURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regiones");
                });

            modelBuilder.Entity("GenshinFan_API_REST_ASPNET.Entities.TipoAnimacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposAnimaciones");
                });

            modelBuilder.Entity("GenshinFan_API_REST_ASPNET.Entities.Video", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("FechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PersonajeId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PersonajeId");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("EtiquetaImagen", b =>
                {
                    b.HasOne("GenshinFan_API_REST_ASPNET.Entities.Etiqueta", null)
                        .WithMany()
                        .HasForeignKey("EtiquetasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GenshinFan_API_REST_ASPNET.Entities.Imagen", null)
                        .WithMany()
                        .HasForeignKey("ImagenesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EtiquetaVideo", b =>
                {
                    b.HasOne("GenshinFan_API_REST_ASPNET.Entities.Etiqueta", null)
                        .WithMany()
                        .HasForeignKey("EtiquetasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GenshinFan_API_REST_ASPNET.Entities.Video", null)
                        .WithMany()
                        .HasForeignKey("VideosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GenshinFan_API_REST_ASPNET.Entities.Animacion", b =>
                {
                    b.HasOne("GenshinFan_API_REST_ASPNET.Entities.Personaje", null)
                        .WithMany("Animaciones")
                        .HasForeignKey("PersonajeId");

                    b.HasOne("GenshinFan_API_REST_ASPNET.Entities.TipoAnimacion", "TipoAnimacion")
                        .WithMany()
                        .HasForeignKey("TipoAnimacionId");

                    b.Navigation("TipoAnimacion");
                });

            modelBuilder.Entity("GenshinFan_API_REST_ASPNET.Entities.Imagen", b =>
                {
                    b.HasOne("GenshinFan_API_REST_ASPNET.Entities.Personaje", "Personaje")
                        .WithMany("Imagenes")
                        .HasForeignKey("PersonajeId");

                    b.Navigation("Personaje");
                });

            modelBuilder.Entity("GenshinFan_API_REST_ASPNET.Entities.Personaje", b =>
                {
                    b.HasOne("GenshinFan_API_REST_ASPNET.Entities.Elemento", "Elemento")
                        .WithMany()
                        .HasForeignKey("ElementoId");

                    b.HasOne("GenshinFan_API_REST_ASPNET.Entities.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId");

                    b.Navigation("Elemento");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("GenshinFan_API_REST_ASPNET.Entities.Video", b =>
                {
                    b.HasOne("GenshinFan_API_REST_ASPNET.Entities.Personaje", "Personaje")
                        .WithMany("Videos")
                        .HasForeignKey("PersonajeId");

                    b.Navigation("Personaje");
                });

            modelBuilder.Entity("GenshinFan_API_REST_ASPNET.Entities.Personaje", b =>
                {
                    b.Navigation("Animaciones");

                    b.Navigation("Imagenes");

                    b.Navigation("Videos");
                });
#pragma warning restore 612, 618
        }
    }
}
